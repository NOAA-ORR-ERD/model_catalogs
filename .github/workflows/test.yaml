name: Tests # regular only, on matrix of OSes
on:
  push:
    branches:
      - "main"
  pull_request:
    branches:
      - "*"
  schedule:
    - cron: "0 12 * * 1"


jobs:
  tests:
    name: Build (${{ matrix.python-version }} | ${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: ["macos-latest", "ubuntu-latest", "windows-latest"]
        python-version: ["3.8", "3.9", "3.10"]
    steps:
      - uses: actions/checkout@v2
      - name: Cache conda
        uses: actions/cache@v1
        env:
          # Increase this value to reset cache if ci/environment.yml has not changed
          CACHE_NUMBER: 0
        with:
          path: ~/conda_pkgs_dir
          key: ${{ runner.os }}-conda-${{ env.CACHE_NUMBER }}-${{ hashFiles('ci/environment-py${{ matrix.python-version }}.yml') }}
      - uses: conda-incubator/setup-miniconda@v2
        with:
          python-version: ${{ matrix.python-version }}
          miniforge-variant: Mambaforge
          channels: conda-forge, defaults # These need to be specified to use mamba
          channel-priority: true
          environment-file: ci/environment-py${{ matrix.python-version }}.yml

          activate-environment: test-env-model-catalogs
          use-only-tar-bz2: true # IMPORTANT: This needs to be set for caching to work properly!
      - name: Set up conda environment
        shell: bash -l {0}
        run: |
          python -m pip install -e . --no-deps --force-reinstall
      - name: Run Tests
        shell: bash -l {0}
        run: |
          pytest --cov=./ --cov-report=xml
      # have this happen on the following set of (slow) tests only
      # - name: Upload code coverage to Codecov
      #   uses: codecov/codecov-action@v1
      #   with:
      #     file: ./coverage.xml
      #     flags: unittests
      #     env_vars: OS,PYTHON
      #     name: codecov-umbrella
      #     fail_ci_if_error: false
